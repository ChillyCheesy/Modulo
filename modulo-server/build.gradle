plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'com.chillycheesy.modulo-application' version '0.0.2'
    id 'maven-publish'
}

archivesBaseName = 'modulo-server'
sourceCompatibility = 11

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.3'
    compile group: 'org.springframework.boot', name: 'spring-boot-loader', version: '1.5.2.RELEASE'
    implementation project(':modulo-api')

    testCompile 'org.mockito:mockito-core:4.3.1'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.6.3') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

module {
    moduleName = modulo_modulename as Object
    version = modulo_version as Object
    authors = ['ChillyCheesy']
    main = 'com.chillycheesy.moduloserver.ServerModule'
}


final deployPropertiesFile = rootProject.file('deploy.properties')
final deployProperty = new Properties()
if (deployPropertiesFile.exists()) {
    deployProperty.load(new FileInputStream(deployPropertiesFile))
    println 'deploy.properties find.'
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = modulo_modulename
                description = 'Modulo Server provide the ServerModule and all system about the server starting actions.'
                url = 'https://modulo.chillycheesy.com'
                licenses {
                    license {
                        name = 'Mozilla Public License, Version 2.0'
                        url = 'https://www.mozilla.org/en-US/MPL/2.0/'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ChillyCheesy/Modulo.git'
                    developerConnection = 'scm:git:git@github.com:ChillyCheesy/Modulo.git'
                    url = 'https://github.com/ChillyCheesy/Modulo/tree/master'
                }
                repositories {
                    maven {
                        url deployProperty.url ?: ''
                        credentials {
                            username deployProperty.repoUser ?: ''
                            password deployProperty.repoPassword ?: ''
                        }
                    }
                }
            }
        }
    }
}
