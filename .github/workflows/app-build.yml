name: üå∂ App build

on:
  push:
    branches:
      - master
      - dev

jobs:
  build_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Setup properties SNAPSHOT
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "repoPassword=$SONATYPE_PASSWORD" >> gradle.properties
          echo "repoUser=$SONATYPE_USER" >> gradle.properties
          echo "url=$URL_SONATYPE_SNAPSHOT" >> gradle.properties
        env:
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          URL_SONATYPE_SNAPSHOT: ${{ secrets.URL_SONATYPE_SNAPSHOT }}
      - name: Setup properties RELEASE
        if: github.ref == 'refs/heads/master'
        run: |
          echo "repoPassword=$SONATYPE_PASSWORD" >> gradle.properties
          echo "repoUser=$SONATYPE_USER" >> gradle.properties
          echo "url=$URL_SONATYPE_RELEASE" >> gradle.properties
        env:
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          URL_SONATYPE_RELEASE: ${{ secrets.URL_SONATYPE_RELEASE }}
      - name: üê≠ Deploy maven-central
        run: |
          chmod +x gradlew
          ./gradlew clean :modulo-api:publish :modulo-server:publish
      - name: Setup release title
        if: github.ref == 'refs/heads/master'
        run: TITLE=$(cat gradle.properties | grep modulo_version | cut -d '=' -f 2)
      - name: Create release
        if: github.ref == 'refs/heads/master'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: $GITHUB_TOKEN
          automatic_release_tag: latest
          title: ü™§ $TITLE
        env:
          GITHUB_TOKEN: ${{ github.token }}