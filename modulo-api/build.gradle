plugins {
    id 'java-library'
    id 'maven-publish'
}

archivesBaseName = 'modulo-api'

sourceCompatibility = 16
targetCompatibility = JavaVersion.VERSION_16

dependencies {
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3'
    api 'org.apache.tomcat.embed:tomcat-embed-websocket:9.0.39'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.5.1'
}

java {
    withSourcesJar()
    withJavadocJar()
}

compileJava {
    options.compilerArgs << '-parameters'
}

test {
    useJUnitPlatform()
}

final deployPropertiesFile = rootProject.file('deploy.properties')
final deployProperty = new Properties()
if (deployPropertiesFile.exists()) {
    deployProperty.load(new FileInputStream(deployPropertiesFile))
    println 'deploy.properties find.'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = project.name
                description = 'Modulo is a collaborative Java framework, where anybody can add any module to his Modulo Server.'
                url = 'https://modulo.chillycheesy.com'
                licenses {
                    license {
                        name = 'Mozilla Public License, Version 2.0'
                        url = 'https://www.mozilla.org/en-US/MPL/2.0/'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ChillyCheesy/Modulo.git'
                    developerConnection = 'scm:git:git@github.com:ChillyCheesy/Modulo.git'
                    url = 'https://github.com/ChillyCheesy/Modulo/tree/master'
                }
                repositories {
                    maven {
                        url deployProperty.url ?: ''
                        credentials {
                            username deployProperty.repoUser ?: ''
                            password deployProperty.repoPassword ?: ''
                        }
                    }
                }
            }
        }
    }
}

compileTestJava.options.compilerArgs << '-parameters'